asyncapi: '2.4.0'
info:
  title: 'clash-bot-webapp-service'
  description: Clash Bot Webapp Socket Service to support League of Legends Clash tournament scheduling with Discord.
  contact:
    name: ClashBot-API-Support
    email: rixxroid@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  localhost:
    url: localhost:8081/api/v2
    description: Local Server
    protocol: ws
    protocolVersion: 13.0.0
components:
  schemas:
    Team:
      description: A League of Legends Clash Team
      type: object
      properties:
        name:
          type: string
          description: The name of the Team.
        playerDetails:
          type: object
          properties:
            Top:
              $ref: '#/components/schemas/Player'
            Mid:
              $ref: '#/components/schemas/Player'
            Jg:
              $ref: '#/components/schemas/Player'
            Bot:
              $ref: '#/components/schemas/Player'
            Supp:
              $ref: '#/components/schemas/Player'
        serverId:
          description: The Discord server that the Team belongs to.
          type: string
        tournament:
          $ref: '#/components/schemas/Tournament'
    Tournament:
      description: A League of Legends Clash Tournament
      type: object
      properties:
        tournamentName:
          description: The name of the Tournament.
          type: string
        tournamentDay:
          description: The day number of the Tournament. [1-4]
          example: 1
          type: string
        startTime:
          description: When the Tournament starts.
          type: string
          format: date-time
        registrationTime:
          description: When you can register for the Tournament.
          type: string
          format: date-time
    Tentative:
      description: A queue for Players unsure if they will play Clash for a given Tournament.
      type: object
      properties:
        serverId:
          description: 'The Server that the tentative queue belongs to.'
          type: string
        tournamentDetails:
          $ref: '#/components/schemas/Tournament'
        tentativePlayers:
          items:
            $ref: '#/components/schemas/Player'
    Player:
      description: A Clash Bot Player
      type: object
      properties:
        id:
          description: Unique identifier for Player
          type: string
        name:
          description: The Players discord name
          type: string
        role:
          $ref: '#/components/schemas/Role'
        champions:
          description: A list of the Users preferred champions.
          type: array
          items:
            type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        serverId:
          type: string
    Subscription:
      description: A map of subscriptions a player has for Clash Bot
      type: object
      properties:
        key:
          type: string
        isOn:
          type: boolean
    Role:
      description: A League of Legends role.
      type: string
      enum:
        - Top
        - Mid
        - Jg
        - Bot
        - Supp
channels:
  /teams:
    description: A realtime subscription to deal with changes with League of Legends Clash Bot Teams based on Discord servers.
    bindings:
      ws:
        method: GET
        query:
          schema:
            type: object
            required:
              - serverId
            properties:
              serverId:
                description: The Discord server Identifier to watch Clash Team events for.
                type: string
    subscribe:
      description: To recieve Team events based on a server.
      operationId: subscribeToTeamEventsBasedOnServer
      tags:
        - name: Team
      message:
        title: Team Update
        description: A single Clash Team event.
        messageId: teamsUpdate
        correlationId:
          description: Default Correlation ID
          location: $message.header#/correlationId
        payload:
          $ref: '#/components/schemas/Team'
    publish:
      description: To publish Team events based on a server.
      operationId: publishTeamEventBasedOnServer
      tags:
        - name: Team
      message:
        title: Team Update
        description: A single Clash Team event to propagate.
        messageId: teamEvent
        correlationId:
          description: Default Correlation ID
          location: $message.header#/correlationId
        payload:
          $ref: '#/components/schemas/Team'
